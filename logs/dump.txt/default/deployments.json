{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "1357"
    },
    "items": [
        {
            "metadata": {
                "name": "report-backend",
                "namespace": "default",
                "uid": "14608589-056d-444d-b21c-f2aaf8a71a93",
                "resourceVersion": "601",
                "generation": 1,
                "creationTimestamp": "2022-07-25T15:00:12Z",
                "labels": {
                    "app": "report-backend"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"report-backend\"},\"name\":\"report-backend\",\"namespace\":\"default\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"report-backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"report-backend\"}},\"spec\":{\"containers\":[{\"args\":[\"bash\",\"-c\",\"python main.py\"],\"image\":\"nvallore/report-backend\",\"name\":\"report-backend\",\"ports\":[{\"containerPort\":8000}]}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "report-backend"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "report-backend"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "report-backend",
                                "image": "nvallore/report-backend",
                                "args": [
                                    "bash",
                                    "-c",
                                    "python main.py"
                                ],
                                "ports": [
                                    {
                                        "containerPort": 8000,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "Always"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2022-07-25T15:02:16Z",
                        "lastTransitionTime": "2022-07-25T15:02:16Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2022-07-25T15:02:16Z",
                        "lastTransitionTime": "2022-07-25T15:00:12Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"report-backend-7dfb94885c\" has successfully progressed."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "students-backend",
                "namespace": "default",
                "uid": "7338a8ce-baba-4f22-acf2-05bc179ebcc6",
                "resourceVersion": "645",
                "generation": 1,
                "creationTimestamp": "2022-07-25T15:00:12Z",
                "labels": {
                    "app": "students-backend"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"students-backend\"},\"name\":\"students-backend\",\"namespace\":\"default\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"students-backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"students-backend\"}},\"spec\":{\"containers\":[{\"args\":[\"bash\",\"-c\",\"python manage.py makemigrations \\u0026\\u0026 python manage.py migrate \\u0026\\u0026 python manage.py runserver 0.0.0.0:8000\"],\"env\":[{\"name\":\"POSTGRES_NAME\",\"value\":\"postgres\"},{\"name\":\"POSTGRES_PASSWORD\",\"value\":\"postgres\"},{\"name\":\"POSTGRES_USER\",\"value\":\"postgres\"},{\"name\":\"POSTGRES_DB\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"POSTGRES_DB\",\"name\":\"app-variables\"}}},{\"name\":\"DB_HOST\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"DB_HOST_STUDENT\",\"name\":\"app-variables\"}}}],\"image\":\"nvallore/students-backend\",\"name\":\"students-backend\",\"ports\":[{\"containerPort\":8000}]}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "students-backend"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "students-backend"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "students-backend",
                                "image": "nvallore/students-backend",
                                "args": [
                                    "bash",
                                    "-c",
                                    "python manage.py makemigrations \u0026\u0026 python manage.py migrate \u0026\u0026 python manage.py runserver 0.0.0.0:8000"
                                ],
                                "ports": [
                                    {
                                        "containerPort": 8000,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "POSTGRES_NAME",
                                        "value": "postgres"
                                    },
                                    {
                                        "name": "POSTGRES_PASSWORD",
                                        "value": "postgres"
                                    },
                                    {
                                        "name": "POSTGRES_USER",
                                        "value": "postgres"
                                    },
                                    {
                                        "name": "POSTGRES_DB",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "app-variables",
                                                "key": "POSTGRES_DB"
                                            }
                                        }
                                    },
                                    {
                                        "name": "DB_HOST",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "app-variables",
                                                "key": "DB_HOST_STUDENT"
                                            }
                                        }
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "Always"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2022-07-25T15:01:12Z",
                        "lastTransitionTime": "2022-07-25T15:00:12Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"students-backend-84587689d5\" has successfully progressed."
                    },
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2022-07-25T15:02:47Z",
                        "lastTransitionTime": "2022-07-25T15:02:47Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "vaccination-backend",
                "namespace": "default",
                "uid": "c00ac924-c87b-4917-b09a-c3619211bdff",
                "resourceVersion": "656",
                "generation": 1,
                "creationTimestamp": "2022-07-25T15:00:12Z",
                "labels": {
                    "app": "vaccination-backend"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"vaccination-backend\"},\"name\":\"vaccination-backend\",\"namespace\":\"default\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"vaccination-backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"vaccination-backend\"}},\"spec\":{\"containers\":[{\"args\":[\"bash\",\"-c\",\"python manage.py makemigrations \\u0026\\u0026 python manage.py migrate \\u0026\\u0026 python manage.py runserver 0.0.0.0:8000\"],\"env\":[{\"name\":\"POSTGRES_NAME\",\"value\":\"postgres\"},{\"name\":\"POSTGRES_PASSWORD\",\"value\":\"postgres\"},{\"name\":\"POSTGRES_USER\",\"value\":\"postgres\"},{\"name\":\"POSTGRES_DB\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"POSTGRES_DB\",\"name\":\"app-variables\"}}},{\"name\":\"DB_HOST\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"DB_HOST_VACCINATION\",\"name\":\"app-variables\"}}}],\"image\":\"nvallore/vaccination-backend\",\"name\":\"vaccination-backend\",\"ports\":[{\"containerPort\":8000}]}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "vaccination-backend"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "vaccination-backend"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "vaccination-backend",
                                "image": "nvallore/vaccination-backend",
                                "args": [
                                    "bash",
                                    "-c",
                                    "python manage.py makemigrations \u0026\u0026 python manage.py migrate \u0026\u0026 python manage.py runserver 0.0.0.0:8000"
                                ],
                                "ports": [
                                    {
                                        "containerPort": 8000,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "POSTGRES_NAME",
                                        "value": "postgres"
                                    },
                                    {
                                        "name": "POSTGRES_PASSWORD",
                                        "value": "postgres"
                                    },
                                    {
                                        "name": "POSTGRES_USER",
                                        "value": "postgres"
                                    },
                                    {
                                        "name": "POSTGRES_DB",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "app-variables",
                                                "key": "POSTGRES_DB"
                                            }
                                        }
                                    },
                                    {
                                        "name": "DB_HOST",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "app-variables",
                                                "key": "DB_HOST_VACCINATION"
                                            }
                                        }
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "Always"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2022-07-25T15:01:23Z",
                        "lastTransitionTime": "2022-07-25T15:00:12Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"vaccination-backend-68477f7b6b\" has successfully progressed."
                    },
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2022-07-25T15:02:50Z",
                        "lastTransitionTime": "2022-07-25T15:02:50Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    }
                ]
            }
        }
    ]
}
